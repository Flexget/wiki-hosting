version: "3"
services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB:
      POSTGRES_PASSWORD:
      POSTGRES_USER:
    logging:
      driver: "none"
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data
  wiki:
    image: ghcr.io/requarks/wiki:2
    depends_on:
      - db
    environment:
      DB_TYPE: postgres
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
    volumes:
      - ./favicons/favicon.ico:/wiki/assets/favicon.ico
    restart: unless-stopped
#    ports:
#      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wikijs.rule=Host(`flexget.gazpachoking.net`)||Host(`flexget.com`)||Host(`www.flexget.com`)"
      - "traefik.http.routers.wikijs.tls=true"
      - "traefik.http.routers.wikijs.tls.certresolver=le-prod"
      - "traefik.http.routers.wikijs.entrypoints=websecure"
  traefik:
    image: "traefik:v2.8"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # staging server
      - "--certificatesresolvers.le-staging.acme.email=${TRAEFIK_SSLEMAIL?Variable not set}"
      - "--certificatesresolvers.le-staging.acme.storage=acme.json"
      - "--certificatesresolvers.le-staging.acme.tlschallenge=true"
      - "--certificatesresolvers.le-staging.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      # production server
      - "--certificatesresolvers.le-prod.acme.email=${TRAEFIK_SSLEMAIL?Variable not set}"
      - "--certificatesresolvers.le-prod.acme.storage=acme.json"
      - "--certificatesresolvers.le-prod.acme.tlschallenge=true"
      - "--certificatesresolvers.le-prod.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./acme.json:/acme.json"
    labels:
      - "traefik.enable=true"
      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    restart: unless-stopped
volumes:
  db-data: